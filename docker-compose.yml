name: minitwitter
services:
  load-balancer:
    container_name: load-balancer
    image: nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

  postgres:
    container_name: postgres_db
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supersecret123
      POSTGRES_DB: minitwitter
    volumes:
      - ./docker-data/postgres:/var/lib/postgresql/data

  minitwitter-frontend:
    container_name: frontend
    restart: always
    build:
      context: frontend
      dockerfile: Dockerfile
    environment:
      NUX_PubliC_API_BASE_URL: http://localhost:80

  minitwitter1:
    image: wotasoy/simple-api
    container_name: minitwitter1
    restart: always
    environment:
      DATABASE_URL: postgressql://postgres:supersecret123@my-postgres:5432/minitwitter
      OLLAMA_HOST: http://ollama:11434
      REDIS_HOST: redis
      SERVER_ROLE: api
    volumes:
      - ./docker-data/postgres_db:/var/lib/postgresql/data

  minitwitter2:
    image: wotasoy/simple-api
    container_name: minitwitter2
    restart: always
    environment:
      DATABASE_URL: postgressql://postgres:supersecret123@my-postgres:5432/minitwitter
      OLLAMA_HOST: http://ollama:11434
      REDIS_HOST: redis
      SERVER_ROLE: api
    volumes:
      - ./docker-data/postgres_db:/var/lib/postgresql/data

  minitwitter-worker:
    image: wotasoy/simple-api
    container_name: minitwitter-worker
    restart: always
    environment:
      DATABASE_URL: postgressql://postgres:supersecret123@my-postgres:5432/minitwitter
      OLLAMA_HOST: http://ollama:11434
      REDIS_HOST: redis
      SERVER_ROLE: worker
    volumes:
      - ./docker-data/postgres_db:/var/lib/postgresql/data

  ollama:
    image: ollama/ollama
    container_name: ollama
    restart: always
    ports:
      - 12434:11434 # so it doesn't conflict with an installed version
    volumes:
      - ./docker-data/ollama:/root/.ollama

  redis:
    image: redis/redis-stack:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379 # Redis-Port
      - 8001:8001 # Redits Webinterface
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
